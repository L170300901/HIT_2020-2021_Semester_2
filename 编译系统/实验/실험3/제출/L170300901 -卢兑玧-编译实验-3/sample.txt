
//过程声明
int func(int a,int b){ }
void main(){
	//变量声明
	int a;
	//数组声明
	int b[10][10];
	//记录声明
	struct k{
		char c;
		int d;
		float e;
	};
	//表达式
	a=a+3;
	//赋值语句
	a=10;
	//数组元素引用
	a=b[1][2];
	//数组元素赋值
	b[1][2]=a;
	//结构体元素赋值
	k.d=3;
	//结构体元素引用
	a=k.d;
	//分支语句
	if(a>0) {
		a=a+3;
	}
	else {
		a=a+5;
	}
	//循环语句
	while(a>0) {
		a=0;
	}
	//过程调用
	a=func(a,a+3)+6;
	//返回语句
	return 0;
}
void error(){
	char s;
	int f[3][3];
	struct w{
		int d;
	};
	//变量重复声明
	int v;
	int v;
	//变量引用前未声明
	notDeclared = 3;
	//数组引用维度不正确
	f[0] = 0;
	f[1][0][2] = 0;
	//过程调用传递参数数目不正确
	v = func(3,4,5);
	v = func(3);
	//过程调用传递参数类型不正确
	v = func('3','7');
	//过程调用返回值类型不匹配
	s = func(3);
	//函数引用前未声明
	v = notDeclared();
	//调用结构体中不存在的元素
	w.p = 6;
	//运算符和运算分量之间的类型不匹配
	v = 3 + 's';
}
//函数重复声明
void error(){}